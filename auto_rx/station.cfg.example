#
# Radiosonde Auto RX Station Configuration File
#
# Copy this file to station.cfg and modify as required. 
#

# Logging Settings
[logging]
# If enabled, a log file will be written for each detected radiosonde.
per_sonde_log = True

# Settings used when receiving data using a RTLSDR.
[rtlsdr]
# PPM Frequency Correction (ppm offset)
# Refer here for a method of determining this correction: https://gist.github.com/darksidelemm/b517e6a9b821c50c170f1b9b7d65b824
rtlsdr_ppm = 0
# RTLSDR Gain Setting
# Gain settings can generally range between 0dB and 30dB depending on the tuner in use.
# Run rtl_test to confirm what gain settings are available, or use a value of -1 to use automatic gain control.
# Note that this is an overall gain value, not an individual mixer/tuner gain. This is a limitation of the rtl_power/rtl_fm utils.
rtlsdr_gain = -1
# Enable RTLSDR Bias Tee (for v3 Dongles)
# Requires a recent version of rtl-sdr to be installed (needs the -T option)
rtlsdr_bias = False

# Radiosonde Search Parameters
[search_params]
# Number of times to scan before quitting (Deprecated?)
search_attempts = 10
# Wait time between failed scans.
search_delay = 10

# Minimum and maximum search frequencies, in MHz.
# Australia: Use 400.05 - 403 MHz
# Europe: Use 400.05 - 406 MHz
min_freq = 400.05
max_freq = 403.0

# Receive bin width (Hz)
search_step = 800
# Minimum SNR for a peak to be detected. The lower the number, the more peaks detected.
min_snr = 10
# Minimum distance between peaks (Hz)
min_distance = 1000
# Dwell time - How long to wait for a sonde detection on each peak.
dwell_time = 5
# Quantize search results to x Hz steps. Useful as most sondes are on 10 kHz frequency steps. 
quantization = 10000
# Timeout and re-scan after X seconds of no data.
rx_timeout = 120

# Frequency Lists - These must be provided as JSON-compatible lists of floats (in MHz), i.e. [400.50, 401.520, 403.200]

# White-List - Add values to this list to *only* scan on these frequencies.
# This is for when you only want to monitor a small set of launch frequencies.
whitelist = []

# Black-List - Any values added to this list will be removed from the list of detected peaks.
# This is used to remove known spurs or other interferers from the scan list, potentially speeding up detection of a sonde.
blacklist = []

# Grey-List - Any values in this list will be added to every scan run.
# This is useful when you know the regular frequency of a local sonde, but still want to allow detections on other frequencies.
greylist = []

# Station Location (optional). Used by the Habitat Uploader, and by Rotator Control
[location]
station_lat = 0.0
station_lon = 0.0
station_alt = 0.0

# Upload settings. Used by both the internet upload threads, and the rotator updater.
[upload]
# Upload/update every x seconds
upload_rate = 30

# Enable upload to various services.
enable_aprs = False
enable_habitat = False

# Upload when (seconds_since_utc_epoch%upload_rate) == 0. Otherwise just delay upload_rate seconds between uploads.
# Setting this to True with multple uploaders should give a higher chance of all uploaders uploading the same frame,
# however the upload_rate should not be set too low, else there may be a chance of missing upload slots.
synchronous_upload = True

# Settings for uploading to APRS-IS
[aprs]
# APRS-IS Login Information
aprs_user = N0CALL
aprs_pass = 00000

# Object name to be used when uploading to APRS-IS (Max 9 chars)
# Should be either a callsign with a -11 or -12 suffix (i.e. N0CALL-12),
# or <id>, which will be replaced with the radiosondes serial number
aprs_object_id = <id>

# The APRS-IS beacon comment. The following fields can be included:
# <freq> - Sonde Frequency, i.e. 401.520 MHz
# <type> - Sonde Type (RS94/RS41)
# <id> - Sonde Serial Number (i.e. M1234567)
# <vel_v> - Sonde Vertical Velocity (i.e. -5.1m/s)
# <temp> - Sonde reported temperature. If no temp data available, this will report -273 degC. Only works for RS41s.
aprs_custom_comment = Radiosonde Auto-RX <freq>

# Settings for uploading to the Habitat HAB tracking database
# Note that the habitat upload will use a fixed string format of:
#`$$<payload_callsign>,<sequence number>,<time>,<lat>,<lon>,<alt>,<speed>,<temp>,<humidity>,<comment>*<CRC16>`
# Where callsign is set below. Temp and Humidity values are currently fixed to 0, as the RS
# code doesn't extract the PTU data at this time.
# You will need to create an appropriate Habitat payload document for this data to appear on the habitat tracker.
# 
[habitat]
# Payload callsign - if set to <id> will use the serial number of the sonde and create a payload document automatically
payload_callsign = <id>
payload_description = Meteorological Radiosonde
# Uploader callsign, as shown above.
uploader_callsign = SONDE_AUTO_RX
# Upload listener position to Habitat? (So you show up on the map)
upload_listener_position = False

# Rotator Settings
# auto_rx can communicate with an instance of rotctld, on either the local machine or elsewhere on the network.
# The update rate is tied to the upload_rate setting above, though internet upload does not need to be enabled
# for the rotator to be updated.
[rotator]
enable_rotator = False
# Hostname / Port of the rotctld instance.
rotator_hostname = 127.0.0.1
rotator_port = 4533
# Rotator Homing.
# If enabled, turn to this location when scanning for sondes.
rotator_homing_enabled = False
rotator_home_azimuth = 0
rotator_home_elevation = 0

# Settings for pushing data into OziPlotter
# Oziplotter receives data via a basic CSV format, via UDP.
[oziplotter]
ozi_enabled = False
ozi_update_rate = 5
ozi_hostname = 127.0.0.1
ozi_port = 55681
# Payload summary output, which can be used by a few of the Horus Ground Station tools
payload_summary_enabled = False
payload_summary_port = 55672

# Position Filtering Options
# These are used to discard positions which are clearly bad, such as where the payload has jumped halfway around the world,
# or has suddenly ended up in orbit.
# Adjust only if absolutely necessary.
[filtering]
# Discard positions with an altitude greater than 50000 metres. 
max_altitude = 50000
# Discard positions more than 1000 km from the observation station location (if set)
max_radius_km = 1000
